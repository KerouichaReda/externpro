diff --git a/CMakeLists.txt b/CMakeLists.txt
new file mode 100644
index 0000000..c44ab6f
--- /dev/null
+++ b/CMakeLists.txt
@@ -0,0 +1,3 @@
+cmake_minimum_required(VERSION 3.0)
+project(wxwidgets)
+include(build/cmake/wx.cmake)
diff --git a/include/wx/msw/setup.h b/include/wx/msw/setup.h
index d005bc3..9913fdf 100644
--- a/include/wx/msw/setup.h
+++ b/include/wx/msw/setup.h
@@ -328,7 +328,7 @@
 //
 // Recommended setting: 1 unless compatibility with the official wxWidgets
 // build and/or the existing code is a concern.
-#define wxUSE_STD_CONTAINERS 0
+#define wxUSE_STD_CONTAINERS 1
 
 // Use standard C++ streams if 1 instead of wx streams in some places. If
 // disabled, wx streams are used everywhere and wxWidgets doesn't depend on the
diff --git a/src/generic/statbmpg.cpp b/src/generic/statbmpg.cpp
index 285c86d..cdb3ba1 100644
--- a/src/generic/statbmpg.cpp
+++ b/src/generic/statbmpg.cpp
@@ -15,6 +15,7 @@
     #include "wx/dcclient.h"
 #endif
 
+#include "wx/dcbuffer.h"
 #include "wx/generic/statbmpg.h"
 
 #if wxUSE_GRAPHICS_CONTEXT
@@ -34,8 +35,11 @@ bool wxGenericStaticBitmap::Create(wxWindow *parent, wxWindowID id,
                             wxDefaultValidator, name))
         return false;
     m_scaleMode = Scale_None;
+    SetBackgroundStyle(wxBG_STYLE_PAINT);
     SetBitmap(bitmap);
     Connect(wxEVT_PAINT, wxPaintEventHandler(wxGenericStaticBitmap::OnPaint));
+    // reduce flickering
+    Bind(wxEVT_ERASE_BACKGROUND, [](wxEraseEvent&){});
     return true;
 }
 
@@ -44,7 +48,12 @@ void wxGenericStaticBitmap::OnPaint(wxPaintEvent& WXUNUSED(event))
     if ( !m_bitmap.IsOk() )
         return;
 
-    wxPaintDC dc(this);
+    wxAutoBufferedPaintDC dc(this);
+    auto bgClr = GetParent()->GetBackgroundColour();
+    if ( UseBgCol() )
+        bgClr = GetBackgroundColour();
+    dc.SetBackground(wxBrush(bgClr));
+    dc.Clear();
     const wxSize drawSize = GetClientSize();
     const wxSize bmpSize = m_bitmap.GetSize();
     wxDouble w = 0;
diff --git a/src/generic/stattextg.cpp b/src/generic/stattextg.cpp
index a8b4b5c..e46ad19 100644
--- a/src/generic/stattextg.cpp
+++ b/src/generic/stattextg.cpp
@@ -21,6 +21,7 @@
     #include "wx/validate.h"
 #endif
 
+#include "wx/dcbuffer.h"
 #include "wx/generic/stattextg.h"
 
 #if wxUSE_MARKUP
@@ -42,9 +43,12 @@ bool wxGenericStaticText::Create(wxWindow *parent,
                             wxDefaultValidator, name) )
         return false;
 
+    SetBackgroundStyle(wxBG_STYLE_PAINT);
     SetLabel(label);
     SetInitialSize(size);
     Connect(wxEVT_PAINT, wxPaintEventHandler(wxGenericStaticText::OnPaint));
+    // reduce flickering
+    Bind(wxEVT_ERASE_BACKGROUND, [](wxEraseEvent&){});
     return true;
 }
 
@@ -67,7 +71,13 @@ void wxGenericStaticText::DoDrawLabel(wxDC& dc, const wxRect& rect)
 
 void wxGenericStaticText::OnPaint(wxPaintEvent& WXUNUSED(event))
 {
-    wxPaintDC dc(this);
+    wxAutoBufferedPaintDC dc(this);
+
+    auto bgClr = GetParent()->GetBackgroundColour();
+    if ( UseBgCol() )
+        bgClr = GetBackgroundColour();
+    dc.SetBackground(wxBrush(bgClr));
+    dc.Clear();
 
     wxRect rect = GetClientRect();
     if ( !IsEnabled() )
diff --git a/src/gtk/dataview.cpp b/src/gtk/dataview.cpp
index 7b73d1a..2e11194 100644
--- a/src/gtk/dataview.cpp
+++ b/src/gtk/dataview.cpp
@@ -1471,7 +1471,11 @@ static GtkCellEditable *gtk_wx_cell_renderer_start_editing(
     if (!cell->StartEditing(item, renderrect))
         return NULL;
 
+#ifdef __WXGTK3__
     wxrenderer->editor_bin = gtk_wx_cell_editor_bin_new(cell->GetEditorCtrl());
+#else
+    wxrenderer->editor_bin = cell->GetEditorCtrl()->m_widget;
+#endif
     gtk_widget_show(wxrenderer->editor_bin);
 
     return GTK_CELL_EDITABLE(wxrenderer->editor_bin);
diff --git a/src/msw/statbmp.cpp b/src/msw/statbmp.cpp
index bea1ddd..1ba0bb7 100644
--- a/src/msw/statbmp.cpp
+++ b/src/msw/statbmp.cpp
@@ -134,6 +134,9 @@ bool wxStaticBitmap::Create(wxWindow *parent,
         Connect(wxEVT_PAINT, wxPaintEventHandler(wxStaticBitmap::DoPaintManually));
     }
 
+    // reduce flickering
+    Bind(wxEVT_ERASE_BACKGROUND, [](wxEraseEvent&){});
+
     return true;
 }
 
diff --git a/src/msw/stattext.cpp b/src/msw/stattext.cpp
index 1b532ce..a09193c 100644
--- a/src/msw/stattext.cpp
+++ b/src/msw/stattext.cpp
@@ -51,6 +51,9 @@ bool wxStaticText::Create(wxWindow *parent,
     // the initial size correctly -- do it now
     SetInitialSize(size);
 
+    // reduce flickering
+    Bind(wxEVT_ERASE_BACKGROUND, [](wxEraseEvent&){});
+
     // NOTE: if the label contains ampersand characters which are interpreted as
     //       accelerators, they will be rendered (at least on WinXP) only if the
     //       static text is placed inside a window class which correctly handles
